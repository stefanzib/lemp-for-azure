user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    #gzip  on;
    #gzip_comp_level 1;
    #gzip_proxied any;
    #gzip_types text/plain text/css application/x-javascript text/xml application/xml application/xml+rss text/javascript;
    #php max upload limit cannot be larger than this       
    #client_max_body_size 13m;
	index              index.php index.html index.htm hostingstart.html;

    include /etc/nginx/conf.d/*.conf;
    
    server {
		server_name www.example.com;
		root /var/www/wwwroot; ## <-- Your only path $
		error_log /var/log/nginx/error.log;

		listen 80;
		listen [::]:80;

		location = /favicon.ico {
			log_not_found off;
			access_log off;
		}

		location = /robots.txt {
			allow all;
			log_not_found off;
			access_log off;
		}

        # Deny all attempts to access hidden files such as .htaccess, .htpasswd, .DS_Store (Mac).
        # Keep logging the requests to parse later (or to pass to firewall utilities such as fail2ban)
        location ~ /\. {
	        deny all;
        }

        # Deny access to any files with a .php extension in the uploads directory
        # Works in sub-directory installs and also in multisite network
        # Keep logging the requests to parse later (or to pass to firewall utilities such as fail2ban)
        location ~* /(?:uploads|files)/.*\.php$ {
	        deny all;
        }

        location / {
            # This is cool because no php is touched for static content.
            # include the "?$args" part so non-default permalinks doesn't break when using query string
            try_files $uri $uri/ /index.php?$args;
        }        

		location @rewrite {
			rewrite ^/(.*)$ /index.php?q=$1;
		}
		
		location ~* \.(js|css|png|jpg|jpeg|gif|ico|webp|tiff|ttf|svg)$ {
			expires max;
			log_not_found off;
		}
    }
}
